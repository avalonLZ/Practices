
/****************************************************************************
**函数名称：double get_radian(int degree)； 
**功  能：角度转弧度，角度单位为万分之一分
**参  数：int dagree;
**返回值：(degree / 10000.0 / 60.0 / 180.0 * PI);
****************************************************************************/
double get_radian(long degree)
{
	return (degree / 10000.0 / 60.0 / 180.0 * PI);
}


/*************************************************************************
**函数名称：static double get_range(int lng1, int lat1, int lng2, int lat2)
**函数功能：距离计算，输入的经纬度单位为万分之一分
**参  数：int lng1, int lat1, int lng2, int lat2
**返回值：c *  
**************************************************************************/
double get_range(long lng1, long lat1, long lng2, long lat2)
{
	// 角度转弧度	
	double rlng1 = get_radian(lng1);
	double rlat1 = get_radian(lat1);
	double rlng2 = get_radian(lng2);
	double rlat2 = get_radian(lat2);

	double drlng = rlng2 - rlng1;
	double drlat = rlat2 - rlat1;
	
	double a = sin(drlat/2)*sin(drlat/2)+cos(rlat1)*cos(rlat2)*sin(drlng/2)*sin(drlng/2);
	
	// atan2, atan2f, atan2l - arc tangent functions
	//XXX：double atan2(double y, double x);
	double c = 2 * atan2(sqrt(a), sqrt(1 - a));
	
	return (c * EARTH_RADIUS);
}



